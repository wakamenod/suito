env_files = [
    "./.env.suito",
]

[config]
skip_core_tasks = true


[env]
DDL_SRC = "ddl/migrations"
DB_CONNECT = "mysql://${DB_USER}:${DB_PASS}@tcp(${DB_HOST}:${DB_PORT})/${DB_NAME}"
DB_CONNECT_TEST = "mysql://${DB_USER}:${DB_PASS}@tcp(${DB_HOST}:${DB_PORT})/${DB_NAME_TEST}"

[tasks.install]
script = '''
go install -tags mysql github.com/golang-migrate/migrate/v4/cmd/migrate@v4.15.1
'''

[tasks.up]
script = '''
cd backend && makers build
cd ../
cd web && makers build
cd ../
docker-compose up -d
'''

[tasks.up-prod]
script = '''
cd backend && makers build-prod
cd ../
docker-compose -f docker-compose-prod.yml up -d
'''

[tasks.up-log]
script = '''
cd backend && makers build
cd ../
cd web && makers build
cd ../
docker-compose up
'''

[tasks.up-log-prod]
script = '''
cd backend && makers build-prod
cd ../
docker-compose -f docker-compose-prod.yml up
'''

[tasks.down]
script = "docker-compose kill"

[tasks.migrate-up]
script = '''
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT}" up
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT_TEST}" up
'''

[tasks.migrate-down]
script = '''
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT}" down
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT_TEST}" down
'''

[tasks.migrate-drop]
script = '''
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT}" drop
echo y | migrate -source file://${DDL_SRC} -database "${DB_CONNECT_TEST}" drop
'''

[tasks.ssm]
script = '''
aws ssm --profile private start-session --target ${SSM_INSTANCE_ID}
'''

[tasks.swag]
script = '''
cd backend && makers swag
cd ../
cd mobile && makers api-generate
'''